/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as AuthenticatedRouteImport } from './routes/_authenticated'
import { Route as IndexRouteImport } from './routes/index'
import { Route as AuthSignInRouteImport } from './routes/auth.sign-in'
import { Route as AuthForgotPasswordRouteImport } from './routes/auth.forgot-password'
import { Route as AuthCreatePasswordRouteImport } from './routes/auth.create-password'
import { Route as AuthenticatedSalesIndexRouteImport } from './routes/_authenticated.sales.index'
import { Route as AuthenticatedFarmerIndexRouteImport } from './routes/_authenticated.farmer.index'
import { Route as AuthenticatedAdminIndexRouteImport } from './routes/_authenticated.admin.index'

const AuthenticatedRoute = AuthenticatedRouteImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthSignInRoute = AuthSignInRouteImport.update({
  id: '/auth/sign-in',
  path: '/auth/sign-in',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthForgotPasswordRoute = AuthForgotPasswordRouteImport.update({
  id: '/auth/forgot-password',
  path: '/auth/forgot-password',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthCreatePasswordRoute = AuthCreatePasswordRouteImport.update({
  id: '/auth/create-password',
  path: '/auth/create-password',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticatedSalesIndexRoute = AuthenticatedSalesIndexRouteImport.update({
  id: '/sales/',
  path: '/sales/',
  getParentRoute: () => AuthenticatedRoute,
} as any)
const AuthenticatedFarmerIndexRoute =
  AuthenticatedFarmerIndexRouteImport.update({
    id: '/farmer/',
    path: '/farmer/',
    getParentRoute: () => AuthenticatedRoute,
  } as any)
const AuthenticatedAdminIndexRoute = AuthenticatedAdminIndexRouteImport.update({
  id: '/admin/',
  path: '/admin/',
  getParentRoute: () => AuthenticatedRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/auth/create-password': typeof AuthCreatePasswordRoute
  '/auth/forgot-password': typeof AuthForgotPasswordRoute
  '/auth/sign-in': typeof AuthSignInRoute
  '/admin': typeof AuthenticatedAdminIndexRoute
  '/farmer': typeof AuthenticatedFarmerIndexRoute
  '/sales': typeof AuthenticatedSalesIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/auth/create-password': typeof AuthCreatePasswordRoute
  '/auth/forgot-password': typeof AuthForgotPasswordRoute
  '/auth/sign-in': typeof AuthSignInRoute
  '/admin': typeof AuthenticatedAdminIndexRoute
  '/farmer': typeof AuthenticatedFarmerIndexRoute
  '/sales': typeof AuthenticatedSalesIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/_authenticated': typeof AuthenticatedRouteWithChildren
  '/auth/create-password': typeof AuthCreatePasswordRoute
  '/auth/forgot-password': typeof AuthForgotPasswordRoute
  '/auth/sign-in': typeof AuthSignInRoute
  '/_authenticated/admin/': typeof AuthenticatedAdminIndexRoute
  '/_authenticated/farmer/': typeof AuthenticatedFarmerIndexRoute
  '/_authenticated/sales/': typeof AuthenticatedSalesIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/auth/create-password'
    | '/auth/forgot-password'
    | '/auth/sign-in'
    | '/admin'
    | '/farmer'
    | '/sales'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/auth/create-password'
    | '/auth/forgot-password'
    | '/auth/sign-in'
    | '/admin'
    | '/farmer'
    | '/sales'
  id:
    | '__root__'
    | '/'
    | '/_authenticated'
    | '/auth/create-password'
    | '/auth/forgot-password'
    | '/auth/sign-in'
    | '/_authenticated/admin/'
    | '/_authenticated/farmer/'
    | '/_authenticated/sales/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthenticatedRoute: typeof AuthenticatedRouteWithChildren
  AuthCreatePasswordRoute: typeof AuthCreatePasswordRoute
  AuthForgotPasswordRoute: typeof AuthForgotPasswordRoute
  AuthSignInRoute: typeof AuthSignInRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/sign-in': {
      id: '/auth/sign-in'
      path: '/auth/sign-in'
      fullPath: '/auth/sign-in'
      preLoaderRoute: typeof AuthSignInRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/forgot-password': {
      id: '/auth/forgot-password'
      path: '/auth/forgot-password'
      fullPath: '/auth/forgot-password'
      preLoaderRoute: typeof AuthForgotPasswordRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/create-password': {
      id: '/auth/create-password'
      path: '/auth/create-password'
      fullPath: '/auth/create-password'
      preLoaderRoute: typeof AuthCreatePasswordRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticated/sales/': {
      id: '/_authenticated/sales/'
      path: '/sales'
      fullPath: '/sales'
      preLoaderRoute: typeof AuthenticatedSalesIndexRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/farmer/': {
      id: '/_authenticated/farmer/'
      path: '/farmer'
      fullPath: '/farmer'
      preLoaderRoute: typeof AuthenticatedFarmerIndexRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/admin/': {
      id: '/_authenticated/admin/'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AuthenticatedAdminIndexRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
  }
}

interface AuthenticatedRouteChildren {
  AuthenticatedAdminIndexRoute: typeof AuthenticatedAdminIndexRoute
  AuthenticatedFarmerIndexRoute: typeof AuthenticatedFarmerIndexRoute
  AuthenticatedSalesIndexRoute: typeof AuthenticatedSalesIndexRoute
}

const AuthenticatedRouteChildren: AuthenticatedRouteChildren = {
  AuthenticatedAdminIndexRoute: AuthenticatedAdminIndexRoute,
  AuthenticatedFarmerIndexRoute: AuthenticatedFarmerIndexRoute,
  AuthenticatedSalesIndexRoute: AuthenticatedSalesIndexRoute,
}

const AuthenticatedRouteWithChildren = AuthenticatedRoute._addFileChildren(
  AuthenticatedRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthenticatedRoute: AuthenticatedRouteWithChildren,
  AuthCreatePasswordRoute: AuthCreatePasswordRoute,
  AuthForgotPasswordRoute: AuthForgotPasswordRoute,
  AuthSignInRoute: AuthSignInRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
