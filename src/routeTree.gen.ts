/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as AuthRouteRouteImport } from './routes/auth/route'
import { Route as PublicRouteRouteImport } from './routes/_public/route'
import { Route as AuthenticatedRouteRouteImport } from './routes/_authenticated/route'
import { Route as IndexRouteImport } from './routes/index'
import { Route as AuthSignInRouteImport } from './routes/auth/sign-in'
import { Route as AuthResetPasswordRouteImport } from './routes/auth/reset-password'
import { Route as AuthForgotPasswordRouteImport } from './routes/auth/forgot-password'
import { Route as AuthDevSignupRouteImport } from './routes/auth/dev-signup'
import { Route as AuthCreatePasswordRouteImport } from './routes/auth/create-password'
import { Route as AuthenticatedSalesIndexRouteImport } from './routes/_authenticated/sales/index'
import { Route as AuthenticatedFarmerIndexRouteImport } from './routes/_authenticated/farmer/index'
import { Route as AuthenticatedDevIndexRouteImport } from './routes/_authenticated/dev/index'
import { Route as AuthenticatedAdminIndexRouteImport } from './routes/_authenticated/admin/index'

const AuthRouteRoute = AuthRouteRouteImport.update({
  id: '/auth',
  path: '/auth',
  getParentRoute: () => rootRouteImport,
} as any)
const PublicRouteRoute = PublicRouteRouteImport.update({
  id: '/_public',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticatedRouteRoute = AuthenticatedRouteRouteImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthSignInRoute = AuthSignInRouteImport.update({
  id: '/sign-in',
  path: '/sign-in',
  getParentRoute: () => AuthRouteRoute,
} as any)
const AuthResetPasswordRoute = AuthResetPasswordRouteImport.update({
  id: '/reset-password',
  path: '/reset-password',
  getParentRoute: () => AuthRouteRoute,
} as any)
const AuthForgotPasswordRoute = AuthForgotPasswordRouteImport.update({
  id: '/forgot-password',
  path: '/forgot-password',
  getParentRoute: () => AuthRouteRoute,
} as any)
const AuthDevSignupRoute = AuthDevSignupRouteImport.update({
  id: '/dev-signup',
  path: '/dev-signup',
  getParentRoute: () => AuthRouteRoute,
} as any)
const AuthCreatePasswordRoute = AuthCreatePasswordRouteImport.update({
  id: '/create-password',
  path: '/create-password',
  getParentRoute: () => AuthRouteRoute,
} as any)
const AuthenticatedSalesIndexRoute = AuthenticatedSalesIndexRouteImport.update({
  id: '/sales/',
  path: '/sales/',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)
const AuthenticatedFarmerIndexRoute =
  AuthenticatedFarmerIndexRouteImport.update({
    id: '/farmer/',
    path: '/farmer/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedDevIndexRoute = AuthenticatedDevIndexRouteImport.update({
  id: '/dev/',
  path: '/dev/',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)
const AuthenticatedAdminIndexRoute = AuthenticatedAdminIndexRouteImport.update({
  id: '/admin/',
  path: '/admin/',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/auth': typeof AuthRouteRouteWithChildren
  '/auth/create-password': typeof AuthCreatePasswordRoute
  '/auth/dev-signup': typeof AuthDevSignupRoute
  '/auth/forgot-password': typeof AuthForgotPasswordRoute
  '/auth/reset-password': typeof AuthResetPasswordRoute
  '/auth/sign-in': typeof AuthSignInRoute
  '/admin': typeof AuthenticatedAdminIndexRoute
  '/dev': typeof AuthenticatedDevIndexRoute
  '/farmer': typeof AuthenticatedFarmerIndexRoute
  '/sales': typeof AuthenticatedSalesIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/auth': typeof AuthRouteRouteWithChildren
  '/auth/create-password': typeof AuthCreatePasswordRoute
  '/auth/dev-signup': typeof AuthDevSignupRoute
  '/auth/forgot-password': typeof AuthForgotPasswordRoute
  '/auth/reset-password': typeof AuthResetPasswordRoute
  '/auth/sign-in': typeof AuthSignInRoute
  '/admin': typeof AuthenticatedAdminIndexRoute
  '/dev': typeof AuthenticatedDevIndexRoute
  '/farmer': typeof AuthenticatedFarmerIndexRoute
  '/sales': typeof AuthenticatedSalesIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/_authenticated': typeof AuthenticatedRouteRouteWithChildren
  '/_public': typeof PublicRouteRoute
  '/auth': typeof AuthRouteRouteWithChildren
  '/auth/create-password': typeof AuthCreatePasswordRoute
  '/auth/dev-signup': typeof AuthDevSignupRoute
  '/auth/forgot-password': typeof AuthForgotPasswordRoute
  '/auth/reset-password': typeof AuthResetPasswordRoute
  '/auth/sign-in': typeof AuthSignInRoute
  '/_authenticated/admin/': typeof AuthenticatedAdminIndexRoute
  '/_authenticated/dev/': typeof AuthenticatedDevIndexRoute
  '/_authenticated/farmer/': typeof AuthenticatedFarmerIndexRoute
  '/_authenticated/sales/': typeof AuthenticatedSalesIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/auth'
    | '/auth/create-password'
    | '/auth/dev-signup'
    | '/auth/forgot-password'
    | '/auth/reset-password'
    | '/auth/sign-in'
    | '/admin'
    | '/dev'
    | '/farmer'
    | '/sales'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/auth'
    | '/auth/create-password'
    | '/auth/dev-signup'
    | '/auth/forgot-password'
    | '/auth/reset-password'
    | '/auth/sign-in'
    | '/admin'
    | '/dev'
    | '/farmer'
    | '/sales'
  id:
    | '__root__'
    | '/'
    | '/_authenticated'
    | '/_public'
    | '/auth'
    | '/auth/create-password'
    | '/auth/dev-signup'
    | '/auth/forgot-password'
    | '/auth/reset-password'
    | '/auth/sign-in'
    | '/_authenticated/admin/'
    | '/_authenticated/dev/'
    | '/_authenticated/farmer/'
    | '/_authenticated/sales/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthenticatedRouteRoute: typeof AuthenticatedRouteRouteWithChildren
  PublicRouteRoute: typeof PublicRouteRoute
  AuthRouteRoute: typeof AuthRouteRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/auth': {
      id: '/auth'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_public': {
      id: '/_public'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof PublicRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/sign-in': {
      id: '/auth/sign-in'
      path: '/sign-in'
      fullPath: '/auth/sign-in'
      preLoaderRoute: typeof AuthSignInRouteImport
      parentRoute: typeof AuthRouteRoute
    }
    '/auth/reset-password': {
      id: '/auth/reset-password'
      path: '/reset-password'
      fullPath: '/auth/reset-password'
      preLoaderRoute: typeof AuthResetPasswordRouteImport
      parentRoute: typeof AuthRouteRoute
    }
    '/auth/forgot-password': {
      id: '/auth/forgot-password'
      path: '/forgot-password'
      fullPath: '/auth/forgot-password'
      preLoaderRoute: typeof AuthForgotPasswordRouteImport
      parentRoute: typeof AuthRouteRoute
    }
    '/auth/dev-signup': {
      id: '/auth/dev-signup'
      path: '/dev-signup'
      fullPath: '/auth/dev-signup'
      preLoaderRoute: typeof AuthDevSignupRouteImport
      parentRoute: typeof AuthRouteRoute
    }
    '/auth/create-password': {
      id: '/auth/create-password'
      path: '/create-password'
      fullPath: '/auth/create-password'
      preLoaderRoute: typeof AuthCreatePasswordRouteImport
      parentRoute: typeof AuthRouteRoute
    }
    '/_authenticated/sales/': {
      id: '/_authenticated/sales/'
      path: '/sales'
      fullPath: '/sales'
      preLoaderRoute: typeof AuthenticatedSalesIndexRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/farmer/': {
      id: '/_authenticated/farmer/'
      path: '/farmer'
      fullPath: '/farmer'
      preLoaderRoute: typeof AuthenticatedFarmerIndexRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/dev/': {
      id: '/_authenticated/dev/'
      path: '/dev'
      fullPath: '/dev'
      preLoaderRoute: typeof AuthenticatedDevIndexRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/admin/': {
      id: '/_authenticated/admin/'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AuthenticatedAdminIndexRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
  }
}

interface AuthenticatedRouteRouteChildren {
  AuthenticatedAdminIndexRoute: typeof AuthenticatedAdminIndexRoute
  AuthenticatedDevIndexRoute: typeof AuthenticatedDevIndexRoute
  AuthenticatedFarmerIndexRoute: typeof AuthenticatedFarmerIndexRoute
  AuthenticatedSalesIndexRoute: typeof AuthenticatedSalesIndexRoute
}

const AuthenticatedRouteRouteChildren: AuthenticatedRouteRouteChildren = {
  AuthenticatedAdminIndexRoute: AuthenticatedAdminIndexRoute,
  AuthenticatedDevIndexRoute: AuthenticatedDevIndexRoute,
  AuthenticatedFarmerIndexRoute: AuthenticatedFarmerIndexRoute,
  AuthenticatedSalesIndexRoute: AuthenticatedSalesIndexRoute,
}

const AuthenticatedRouteRouteWithChildren =
  AuthenticatedRouteRoute._addFileChildren(AuthenticatedRouteRouteChildren)

interface AuthRouteRouteChildren {
  AuthCreatePasswordRoute: typeof AuthCreatePasswordRoute
  AuthDevSignupRoute: typeof AuthDevSignupRoute
  AuthForgotPasswordRoute: typeof AuthForgotPasswordRoute
  AuthResetPasswordRoute: typeof AuthResetPasswordRoute
  AuthSignInRoute: typeof AuthSignInRoute
}

const AuthRouteRouteChildren: AuthRouteRouteChildren = {
  AuthCreatePasswordRoute: AuthCreatePasswordRoute,
  AuthDevSignupRoute: AuthDevSignupRoute,
  AuthForgotPasswordRoute: AuthForgotPasswordRoute,
  AuthResetPasswordRoute: AuthResetPasswordRoute,
  AuthSignInRoute: AuthSignInRoute,
}

const AuthRouteRouteWithChildren = AuthRouteRoute._addFileChildren(
  AuthRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthenticatedRouteRoute: AuthenticatedRouteRouteWithChildren,
  PublicRouteRoute: PublicRouteRoute,
  AuthRouteRoute: AuthRouteRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
